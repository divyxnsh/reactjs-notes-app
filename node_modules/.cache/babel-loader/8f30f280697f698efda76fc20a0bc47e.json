{"ast":null,"code":"var _jsxFileName = \"/Users/div/Desktop/React/notes/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport Sidebar from \"./Sidebar\";\nimport Main from \"./Main\";\nimport { useState, useEffect } from \"react\";\nimport uuid from \"react-uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [notes, setNotes] = useState([]);\n  const [activeNote, setActiveNote] = useState(false);\n  /*useEffect(() => {\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\n  }, [notes]);*/\n\n  const onAddNote = () => {\n    const newNote = {\n      id: uuid(),\n      title: \"Untitled\",\n      body: \"\",\n      lastModified: Date.now()\n    };\n    setNotes([newNote, ...notes]);\n  };\n\n  const onDeleteNote = idToDelete => {\n    setNotes(notes.filter(note => note.id !== idToDelete));\n  };\n\n  const onUpdateNote = updatedNote => {\n    const updatedNotesArr = notes.map(note => {\n      if (note.id === activeNote) {\n        return updatedNote;\n      }\n\n      return note;\n    });\n    setNotes(updatedNotesArr);\n  };\n\n  const getActiveNote = () => {\n    return notes.find(note => note.id === activeNote);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      notes: notes,\n      onAddNote: onAddNote,\n      onDeleteNote: onDeleteNote,\n      activeNote: activeNote,\n      setActiveNote: setActiveNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      activeNote: getActiveNote(),\n      onUpdateNote: onUpdateNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"gB5omx9RPH1kLpQQ78qO3OWf5pg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/div/Desktop/React/notes/src/App.js"],"names":["Sidebar","Main","useState","useEffect","uuid","App","notes","setNotes","activeNote","setActiveNote","onAddNote","newNote","id","title","body","lastModified","Date","now","onDeleteNote","idToDelete","filter","note","onUpdateNote","updatedNote","updatedNotesArr","map","getActiveNote","find"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,YAAjB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,KAAD,CAA5C;AAEA;AACF;AACA;;AAEE,QAAMQ,SAAS,GAAG,MAAM;AACtB,UAAMC,OAAO,GAAG;AACdC,MAAAA,EAAE,EAAER,IAAI,EADM;AAEdS,MAAAA,KAAK,EAAE,UAFO;AAGdC,MAAAA,IAAI,EAAE,EAHQ;AAIdC,MAAAA,YAAY,EAAEC,IAAI,CAACC,GAAL;AAJA,KAAhB;AAOAV,IAAAA,QAAQ,CAAC,CAACI,OAAD,EAAU,GAAGL,KAAb,CAAD,CAAR;AACD,GATD;;AAWA,QAAMY,YAAY,GAAIC,UAAD,IAAgB;AACnCZ,IAAAA,QAAQ,CAACD,KAAK,CAACc,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACT,EAAL,KAAYO,UAAnC,CAAD,CAAR;AACD,GAFD;;AAIA,QAAMG,YAAY,GAAIC,WAAD,IAAiB;AACpC,UAAMC,eAAe,GAAGlB,KAAK,CAACmB,GAAN,CAAWJ,IAAD,IAAU;AAC1C,UAAIA,IAAI,CAACT,EAAL,KAAYJ,UAAhB,EAA4B;AAC1B,eAAOe,WAAP;AACD;;AACD,aAAOF,IAAP;AACD,KALuB,CAAxB;AAMAd,IAAAA,QAAQ,CAACiB,eAAD,CAAR;AACD,GARD;;AAUA,QAAME,aAAa,GAAG,MAAM;AAC1B,WAAOpB,KAAK,CAACqB,IAAN,CAAYN,IAAD,IAAUA,IAAI,CAACT,EAAL,KAAYJ,UAAjC,CAAP;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,OAAD;AACE,MAAA,KAAK,EAAEF,KADT;AAEE,MAAA,SAAS,EAAEI,SAFb;AAGE,MAAA,YAAY,EAAEQ,YAHhB;AAIE,MAAA,UAAU,EAAEV,UAJd;AAKE,MAAA,aAAa,EAAEC;AALjB;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,IAAD;AAAM,MAAA,UAAU,EAAEiB,aAAa,EAA/B;AAAmC,MAAA,YAAY,EAAEJ;AAAjD;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAjDQjB,G;;KAAAA,G;AAmDT,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\nimport Sidebar from \"./Sidebar\";\nimport Main from \"./Main\";\nimport { useState, useEffect } from \"react\";\nimport uuid from \"react-uuid\";\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n  const [activeNote, setActiveNote] = useState(false);\n\n  /*useEffect(() => {\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\n  }, [notes]);*/\n\n  const onAddNote = () => {\n    const newNote = {\n      id: uuid(),\n      title: \"Untitled\",\n      body: \"\",\n      lastModified: Date.now(),\n    };\n\n    setNotes([newNote, ...notes]);\n  };\n\n  const onDeleteNote = (idToDelete) => {\n    setNotes(notes.filter((note) => note.id !== idToDelete));\n  };\n\n  const onUpdateNote = (updatedNote) => {\n    const updatedNotesArr = notes.map((note) => {\n      if (note.id === activeNote) {\n        return updatedNote;\n      }\n      return note;\n    });\n    setNotes(updatedNotesArr);\n  };\n\n  const getActiveNote = () => {\n    return notes.find((note) => note.id === activeNote);\n  };\n\n  return (\n    <div className=\"App\">\n      <Sidebar\n        notes={notes}\n        onAddNote={onAddNote}\n        onDeleteNote={onDeleteNote}\n        activeNote={activeNote}\n        setActiveNote={setActiveNote}\n      />\n      <Main activeNote={getActiveNote()} onUpdateNote={onUpdateNote} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}